module.exports = function (grunt) {
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    
    dirs: {
      css: 'assets/styles',
      js: 'assets/scripts'
    },
    
    clean: [
      '<%= dirs.css %>/combined.*',
      '<%= dirs.js %>/combined.*'
    ],

    concat: {
      css: {
        src: [
            '<%= dirs.css %>/reset.css', '<%= dirs.css %>/monkey*', '<%= dirs.css %>/*'
        ],
        dest: '<%= dirs.css %>/combined.css'
      },
      js: {
        src: [
            '<%= dirs.js %>/jquery.js', '<%= dirs.js %>/jquery.*', '<%= dirs.js %>/*'
        ],
        dest: '<%= dirs.js %>/combined.js'
      }
    },
    
    cssmin: {
      options: {
        banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +
          '<%= grunt.template.today("yyyy-mm-dd") %> */',
      },
      css: {
        src: '<%= dirs.css %>/combined.css',
        dest: '<%= dirs.css %>/combined.min.css'
      }
    },
    
    uglify: {
      options: {
        banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +
          '<%= grunt.template.today("yyyy-mm-dd") %> */',
      },
      js: {
        files: {
          '<%= dirs.js %>/combined.min.js': ['<%= dirs.js %>/combined.js']
        }
      }
    },

    processhtml: {
      options: {
        data: {
          message: '<!-- AUTOGENERATED FILE - DO NOT EDIT - ' +
          '<%= pkg.name %> - v<%= pkg.version %> - ' +
          '<%= grunt.template.today("yyyy-mm-dd") %> -->'
        }
      },
      dist: {
        files: {
          'index.html': ['index.template.html']
        }
      }
    },

    connect: {
      server: {
        options: {
          port: 8080,
          base: '.'
        }
      }
    },

    casperjs: {
      files: ['./tests/*.js']
    },

    gitcommit: {
      buildfiles: {
        options: {
          message: 'Grunt autogenerated build files'
        },
          files: {
            src: ['assets/*/combined.*', 'index.html']
          }
        }
    },

    gitpush: {
      buildfiles: {
        options: {
          branch: 'deploy'
        }
      }
    },

  });

  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-cssmin');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-processhtml');
  grunt.loadNpmTasks('grunt-contrib-connect');
  grunt.loadNpmTasks('grunt-casperjs-plugin');
  grunt.loadNpmTasks('grunt-git');

  grunt.registerTask('build', 'concat and minify css & js', 
    ['clean', 'concat:css', 'cssmin:css', 'concat:js', 'uglify:js', 'processhtml:dist']);

  grunt.registerTask('test', 'launch server and run tests', 
    ['connect:server', 'casperjs']);

  grunt.registerTask('push', 'commit and push buildfiles to origin', 
    ['gitcommit:buildfiles', 'gitpush:buildfiles']);

  grunt.registerTask('server', 'serve website on localhost:8080; ctrl-C to stop', 
    'connect:server:keepalive');

};